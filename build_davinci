#!/bin/bash
# Usage: build_davinci sync
#

sync=$1
source ~/binaries/helper

source build/envsetup.sh

#export KBUILD_BUILD_USER=Peppa
#export KBUILD_BUILD_HOST=Peppa-Pig
#export TARGET_UNOFFICIAL_BUILD_ID=Pig
function buildsigned() {
source build/envsetup.sh
mka target-files-package otatools -j$( nproc --all )

./build/tools/releasetools/sign_target_files_apks -o -d ~/.android-certs \
    $OUT/obj/PACKAGING/target_files_intermediates/*-target_files-*.zip \
    signed-target_files.zip

./build/tools/releasetools/ota_from_target_files -k ~/.android-certs/releasekey \
    --block --backup=true \
    signed-target_files.zip \
    signed-ota_update.zip

#mv signed-ota_update.zip /home/builder/dl/losq/davinci/lineage-17.1-$(date +%F | sed s@-@@g)-UNOFFICIAL-Pig-davinci.zip
}

function buildbacon() {
mka bacon -j
}

function buildtype() {
info "Do you want a signed build?"
read -p "options: (yes/no)" option
case $option in
  y | Y | yes | Yes)
    buildsigned
    ;;
  n | N | no | No)
    buildbacon
    ;;
esac
}

function build() {
lunch
mka installclean
clear

DATE_START=$(date +"%s")
buildtype

header "Build Completed in:"

DATE_END=$(date +"%s")
DIFF=$(($DATE_END - $DATE_START))
success "Time: $(($DIFF / 60)) minute(s) and $(($DIFF % 60)) seconds."
success
}

if [ -s $sync ]; then
build
else
source ~/binaries/synconly
build
fi
